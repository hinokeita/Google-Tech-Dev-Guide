ハッシュテーブルは効果的に連想配列にアクセスできるようにする。
「ハッシュテーブルは間違いなく人類に知られている単一の最も重要なデータ構造です。」
- スティーブ・イェゲ

用語
・エントリ
　→キーと値の組
・バケット
　→ハッシュの各要素

実装の説明
・unordered_map from TR1
  ・std::unordered_mapはC+11で標準に使用できるようになった連想配列クラス。
  ・TR1のunordered mapはリンクリストとの衝突を処理するハッシュテーブル。
  ・Hash_nodeという構造体を作成し、バケットのリンクリストを作成する。
  ・キーと値が整数値の場合は、Hash_nodeの中に直接格納できるが、
  　それ以外の場合はポインタが格納され、追加のメモリが必要になる。
  ・ハッシュテーブルで実装されているため、O(1)と高速。

・SparseHash
　・sparse_hash_mapは遅いがメモリフットプリント（メモリの使用量）を提供する。
　・unordered_mapと同様に一度にヒープに割り当てられ、負荷率に応じて自動的に拡大または縮小する。
　・unordered_mapと比較すると高速。

・HashDB
　・このハッシュテーブルはメモリの代替として使用するオプションはあるが、ディスク上で永続的になるように設計される。
　・上記の2つと違いバケットの配列は固定長。そのため、負荷率の状態によって増減したりしない。
　・エントリとノードは1つのレコードに格納されている。
　
